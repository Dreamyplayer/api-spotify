import { formatDuration, randomMusic, timeSplit, urltoBase64 } from './functions';
import type { MusicType } from './Music';

let music: MusicType;
let randomAwaitTime = 0;
let startTime = 0;
let width = 0;
let timePlayed = 0;
randomAwaitTime = timeSplit(randomMusic().duration);
const startingSong = randomMusic();

setInterval(() => {
  music = randomMusic();
  randomAwaitTime = timeSplit(music?.duration);
  startTime = new Date().getTime();
}, randomAwaitTime);

setInterval(() => {
  // Updates Width or Progress
  const diff = Math.round(new Date().getTime() - startTime);

  let val = Math.round((diff / randomAwaitTime) * 150);

  if (val >= 150) {
    val = 0;
  }
  width = val;

  // Updates Timeplayed in seconds
  timePlayed++;
  if (timePlayed >= randomAwaitTime / 1e3 || width === 0) {
    timePlayed = 0;
  }
}, 1e3);

// SVG Component
export const svgComponent = async (): Promise<string> => {
  const svgStr = `<svg clip-path="inset(0% round 10px)" width="350" height="120" viewBox="0 0 350 120" fill="#191414"
  xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">

  <rect clip-path="inset(0% round 10px)" width="350" height="120" />

  <!-- Artist Image -->
  <image clip-path="inset(0% round 10px)" preserveAspectRatio="none" height="100" width="100" x="10" y="10"
      href="data:image/jpeg;base64,${await urltoBase64(music?.coverUrl ?? startingSong.coverUrl)}">
  </image>

  <!-- Spotify Logo -->
  <a href="https://github.com/Dreamyplayer">
      <circle cx="106" cy="104" r="8" fill="#191414" />
      <path transform="translate(98,96)" fill-rule="evenodd" clip-rule="evenodd"
          d="M7.49571 1.71267C7.19803 1.74383 7.06607 1.76279 6.72771 1.82323C6.60563 1.84503 6.23655 1.94227 6.06371 1.99823C5.95059 2.03479 5.76407 2.10231 5.68771 2.13431C5.66131 2.14539 5.58931 2.17503 5.52771 2.20027C4.31059 2.69835 3.19747 3.69447 2.50723 4.90311C2.42971 5.03887 2.23047 5.44639 2.18259 5.56711C2.16691 5.60671 2.14159 5.66791 2.12639 5.70311C2.03043 5.92507 1.86027 6.51883 1.80775 6.81511C1.79759 6.87231 1.78307 6.95151 1.77551 6.99111C1.75987 7.07275 1.73535 7.28471 1.71175 7.54187C1.69119 7.76607 1.69111 8.27535 1.71163 8.47575C1.74439 8.79583 1.76307 8.93995 1.79395 9.11111C1.82335 9.27391 1.90339 9.62283 1.93707 9.73511C1.98327 9.88915 2.11651 10.2816 2.12719 10.2951C2.13411 10.3039 2.14515 10.3291 2.15167 10.3511C2.16299 10.3893 2.17463 10.417 2.25567 10.5991C2.98015 12.2263 4.60527 13.6417 6.21571 14.0481C6.24211 14.0548 6.35011 14.083 6.45571 14.1107C7.40259 14.3598 8.62335 14.3625 9.53171 14.1177C9.57791 14.1053 9.65711 14.0841 9.70771 14.0706C11.0807 13.7048 12.4188 12.7376 13.2266 11.5271C13.4346 11.2155 13.7917 10.5607 13.7917 10.491C13.7917 10.4792 13.7978 10.4627 13.8053 10.4543C13.8358 10.4203 14.0165 9.91251 14.0712 9.70711C14.0847 9.65651 14.106 9.57707 14.1186 9.53055C14.3622 8.63103 14.36 7.41783 14.1131 6.46311C14.0869 6.36191 14.0609 6.26111 14.0553 6.23911C13.7294 4.96419 12.7215 3.57499 11.5517 2.78867C11.4152 2.69687 11.1687 2.54311 11.1581 2.54311C11.1542 2.54311 11.1235 2.52571 11.0898 2.50443C11.0234 2.46255 10.7242 2.31011 10.6077 2.25891C10.5681 2.24147 10.4889 2.20739 10.4317 2.18311C10.3745 2.15887 10.3042 2.12871 10.2754 2.11615C10.2193 2.09163 9.86315 1.97167 9.78371 1.95055C8.94507 1.72735 8.14787 1.64447 7.49571 1.71267ZM7.92771 5.05603C8.25815 5.07979 8.76263 5.13291 8.96771 5.16555C9.02051 5.17395 9.11631 5.18855 9.18059 5.19803C10.2018 5.34843 11.336 5.72047 12.1837 6.18311C12.5754 6.39687 12.7068 6.66971 12.5766 6.99871C12.459 7.29583 12.0568 7.45303 11.7837 7.30855C11.5515 7.18567 11.1025 6.96127 11.0397 6.93671C11.0001 6.92119 10.9461 6.89911 10.9197 6.88771C10.6719 6.78035 10.1368 6.60851 9.79971 6.52799C9.75571 6.51751 9.68011 6.49907 9.63171 6.48711C9.53215 6.46243 9.20547 6.40047 8.91971 6.35207C7.52979 6.11655 5.77015 6.18195 4.55971 6.51403C4.35803 6.56935 4.31099 6.57687 4.19971 6.57143C3.63047 6.54367 3.43947 5.80843 3.91971 5.49359C4.15547 5.33899 5.28623 5.12431 6.21571 5.05763C6.49999 5.03723 7.65123 5.03619 7.92771 5.05603ZM7.45571 7.21463C8.30447 7.25887 9.12559 7.41107 9.90551 7.66871C10.7896 7.96075 11.5789 8.37147 11.6845 8.59439C11.911 9.07263 11.3756 9.50031 10.9277 9.19891C10.7909 9.10683 10.3381 8.88247 10.0877 8.78271C9.09403 8.38671 8.03919 8.19059 6.90643 8.19131C6.16471 8.19179 5.51671 8.27927 4.76771 8.48003C4.56559 8.53423 4.49667 8.53427 4.37451 8.48023C3.95211 8.29339 3.98055 7.71035 4.41939 7.56139C5.19183 7.29919 6.40947 7.16015 7.45571 7.21463ZM7.65107 9.27919C7.74163 9.28803 7.89131 9.30283 7.98371 9.31207C8.69511 9.38307 9.50651 9.61171 10.1677 9.92743C10.3918 10.0344 10.7635 10.2419 10.8119 10.2869C11.1065 10.5614 10.8702 11.0429 10.477 10.9691C10.4475 10.9636 10.337 10.9103 10.2315 10.8506C9.41475 10.3888 8.63703 10.1562 7.62371 10.0707C7.19795 10.0348 6.36919 10.0509 6.02635 10.1017C5.99851 10.1058 5.91811 10.1173 5.84771 10.1271C5.62239 10.1587 5.30711 10.2096 5.19171 10.233C5.13011 10.2455 5.00783 10.2708 4.91995 10.2893C4.55255 10.3664 4.34447 10.2356 4.34395 9.92711C4.34351 9.68723 4.44835 9.58875 4.78371 9.51379C5.68495 9.31231 6.93963 9.20967 7.65107 9.27919Z"
          fill="#1DDA63" />
  </a>

  <!-- GitHub Logo -->
  <a href="https://github.com/Dreamyplayer">
      <path class="github" transform="translate(320,94)"
          d="M16 8.20036C16 9.98707 15.4913 11.594 14.474 13.0213C13.4566 14.4485 12.1424 15.4362 10.5313 15.9843C10.3438 16.0199 10.2066 15.995 10.1198 15.9096C10.033 15.8241 9.98958 15.7174 9.98958 15.5892V13.3363C9.98958 12.6458 9.80903 12.1404 9.44792 11.8201C9.84375 11.7773 10.1997 11.7133 10.5156 11.6279C10.8316 11.5424 11.158 11.4036 11.4948 11.2114C11.8316 11.0192 12.1128 10.7825 12.3385 10.5014C12.5642 10.2202 12.7483 9.84648 12.8906 9.38023C13.033 8.91398 13.1042 8.37832 13.1042 7.77326C13.1042 6.91194 12.8299 6.17874 12.2813 5.57368C12.5382 4.92591 12.5104 4.19984 12.1979 3.39546C12.0035 3.3314 11.7222 3.37055 11.3542 3.51292C10.9861 3.65528 10.6667 3.81189 10.3958 3.98273L10 4.23899C9.35417 4.05391 8.6875 3.96137 8 3.96137C7.3125 3.96137 6.64583 4.05391 6 4.23899C5.88889 4.16069 5.74132 4.06459 5.55729 3.95069C5.37326 3.8368 5.08333 3.69977 4.6875 3.53961C4.29167 3.37945 3.99306 3.3314 3.79167 3.39546C3.48611 4.19984 3.46181 4.92591 3.71875 5.57368C3.17014 6.17874 2.89583 6.91194 2.89583 7.77326C2.89583 8.37832 2.96701 8.9122 3.10938 9.37489C3.25174 9.83759 3.43403 10.2113 3.65625 10.496C3.87847 10.7808 4.15799 11.0192 4.49479 11.2114C4.8316 11.4036 5.15799 11.5424 5.47396 11.6279C5.78993 11.7133 6.14583 11.7773 6.54167 11.8201C6.26389 12.0763 6.09375 12.4429 6.03125 12.9198C5.88542 12.991 5.72917 13.0444 5.5625 13.08C5.39583 13.1156 5.19792 13.1334 4.96875 13.1334C4.73958 13.1334 4.51215 13.0569 4.28646 12.9038C4.06076 12.7508 3.86806 12.5283 3.70833 12.2365C3.57639 12.0087 3.40799 11.8236 3.20313 11.6812C2.99826 11.5389 2.82639 11.4535 2.6875 11.425L2.47917 11.3929C2.33333 11.3929 2.23264 11.409 2.17708 11.441C2.12153 11.473 2.10417 11.514 2.125 11.5638C2.14583 11.6136 2.17708 11.6634 2.21875 11.7133C2.26042 11.7631 2.30556 11.8058 2.35417 11.8414L2.42708 11.8948C2.57986 11.966 2.7309 12.1012 2.88021 12.3005C3.02951 12.4999 3.13889 12.6814 3.20833 12.8451L3.3125 13.0907C3.40278 13.3612 3.55556 13.5801 3.77083 13.7473C3.98611 13.9146 4.21875 14.0214 4.46875 14.0677C4.71875 14.1139 4.96007 14.1389 5.19271 14.1424C5.42535 14.146 5.61806 14.1335 5.77083 14.105L6.01042 14.0623C6.01042 14.3328 6.01215 14.6496 6.01563 15.0126C6.0191 15.3757 6.02083 15.5679 6.02083 15.5892C6.02083 15.7174 5.97569 15.8241 5.88542 15.9096C5.79514 15.995 5.65625 16.0199 5.46875 15.9843C3.85764 15.4362 2.5434 14.4485 1.52604 13.0213C0.508681 11.594 0 9.98707 0 8.20036C0 6.71262 0.357639 5.34056 1.07292 4.08416C1.78819 2.82777 2.75868 1.83298 3.98438 1.09979C5.21007 0.366596 6.54861 0 8 0C9.45139 0 10.7899 0.366596 12.0156 1.09979C13.2413 1.83298 14.2118 2.82777 14.9271 4.08416C15.6424 5.34056 16 6.71262 16 8.20036Z"
          fill="#555555" />
  </a>

  <style>
      .small {
          font: normal 12px sans-serif;
          fill: #ffffffb3;
      }

      .small:hover,
      .heavy:hover,
      .number:hover {
          fill: #f0f6fc;

      }

      .github:hover {
          fill: #58a6ff;
      }

      .number {
          font: normal 6px sans-serif;
          fill: #ffffffb3;
      }

      .heavy {
          font: bold 14px sans-serif;
          fill: #ffffffb3;
      }
  </style>

  <a href="https://github.com/Dreamyplayer">
  </a>
  <text x="120" y="20" class="heavy">
      Now Playing:
  </text>
  <text x="120" y="40" class="small">
      ${music?.title.length >= 30 ? music?.title.slice(0, 27) + '...' : music?.title ?? startingSong.title}
  </text>
  <text x="120" y="55" class="small">
      (feat. ${music?.artist.length >= 25 ? music?.title.slice(0, 22) + '...' : music?.artist ?? startingSong.artist})
  </text>

  <!-- Progress Bar -->
  <g>
      <!-- Line 1 main -->
      <rect clip-path="inset(0% round 10px)" x="120" y="95" width="150" height="2" rx="0.5" fill="#353A40" />
      <!-- Line 2 progress bar -->
      <rect clip-path="inset(0% round 10px)" x="120" y="95" width="${width}" height="2" rx="0.5" fill="#1DB954" />
      <!-- Circle -->
      <!-- Adding 120 to rect width - both will be in same position -->
      <circle cx="${width + 120}" cy="96" r="2" fill="#D9D9D9" />
      <!-- <text x="120" y="105" class="number">
          ${formatDuration(timePlayed)}
      </text> -->
      <text x="258" y="105" class="number">
          ${music?.duration ?? startingSong.duration}
      </text>
  </g>
</svg>
`;
  return svgStr;
};
